stages: 
    - frontend-build
    - frontend-test
    - frontend-deploy
    - backend-build
    - backend-test
    - backend-deploy
    
frontend-build:
    image: node:latest
    stage: frontend-build
    before_script:
        - cd frontend
        - npm install
    script:
        - npm run build

frontend-test:
    image: node:latest
    stage: frontend-test
    before_script:
        - cd frontend
        - yarn
    script:
        - yarn test

backend-build:
    image: node:latest
    stage: backend-build
    before_script:
        - cd backend
        - npm install
    script:
        - npm run build

backend-test:
    image: node:latest
    stage: backend-test
    before_script:
        - cd backend
        - npm install
    script:
        - npm run unittest

frontend-deploy:
    image: docker:stable
    stage: frontend-deploy
    services:
        - docker:dind
    before_script:
        - cd frontend
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_TOKEN
    script:
        - docker build --pull -t $CI_REGISTRY_IMAGE_FRONTEND .
        - docker push $CI_REGISTRY_IMAGE_FRONTEND

backend-deploy:
    image: docker:stable
    stage: backend-deploy
    services:
        - docker:dind
    before_script:
        - cd backend
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_TOKEN
    script:
        - docker build --pull -t $CI_REGISTRY_IMAGE_BACKEND .
        - docker push $CI_REGISTRY_IMAGE_BACKEND

